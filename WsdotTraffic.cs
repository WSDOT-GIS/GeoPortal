//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace Wsdot.Traffic {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IBorderCrossings", Namespace="http://tempuri.org/")]
    public partial class BorderCrossings : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBorderCrossingsOperationCompleted;
        
        /// <remarks/>
        public BorderCrossings() {
            this.Url = "http://www.wsdot.wa.gov/traffic/api/BorderCrossings/BorderCrossings.svc";
        }
        
        /// <remarks/>
        public event GetBorderCrossingsCompletedEventHandler GetBorderCrossingsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IBorderCrossings/GetBorderCrossings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public BorderCrossingData[] GetBorderCrossings([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetBorderCrossings", new object[] {
                        AccessCode});
            return ((BorderCrossingData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBorderCrossings(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBorderCrossings", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public BorderCrossingData[] EndGetBorderCrossings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BorderCrossingData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBorderCrossingsAsync(string AccessCode) {
            this.GetBorderCrossingsAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetBorderCrossingsAsync(string AccessCode, object userState) {
            if ((this.GetBorderCrossingsOperationCompleted == null)) {
                this.GetBorderCrossingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBorderCrossingsOperationCompleted);
            }
            this.InvokeAsync("GetBorderCrossings", new object[] {
                        AccessCode}, this.GetBorderCrossingsOperationCompleted, userState);
        }
        
        private void OnGetBorderCrossingsOperationCompleted(object arg) {
            if ((this.GetBorderCrossingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBorderCrossingsCompleted(this, new GetBorderCrossingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class BorderCrossingData {
        
        private RoadwayLocation borderCrossingLocationField;
        
        private string crossingNameField;
        
        private System.DateTime timeField;
        
        private bool timeFieldSpecified;
        
        private int waitTimeField;
        
        private bool waitTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation BorderCrossingLocation {
            get {
                return this.borderCrossingLocationField;
            }
            set {
                this.borderCrossingLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CrossingName {
            get {
                return this.crossingNameField;
            }
            set {
                this.crossingNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeSpecified {
            get {
                return this.timeFieldSpecified;
            }
            set {
                this.timeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int WaitTime {
            get {
                return this.waitTimeField;
            }
            set {
                this.waitTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaitTimeSpecified {
            get {
                return this.waitTimeFieldSpecified;
            }
            set {
                this.waitTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class RoadwayLocation {
        
        private string descriptionField;
        
        private string directionField;
        
        private decimal latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private decimal longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private decimal milePostField;
        
        private bool milePostFieldSpecified;
        
        private string roadNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LatitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LongitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal MilePost {
            get {
                return this.milePostField;
            }
            set {
                this.milePostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MilePostSpecified {
            get {
                return this.milePostFieldSpecified;
            }
            set {
                this.milePostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RoadName {
            get {
                return this.roadNameField;
            }
            set {
                this.roadNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetBorderCrossingsCompletedEventHandler(object sender, GetBorderCrossingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBorderCrossingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBorderCrossingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BorderCrossingData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BorderCrossingData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IHighwayAlerts", Namespace="http://tempuri.org/")]
    public partial class HighwayAlerts : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlertsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAlertsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventCategoriesOperationCompleted;
        
        /// <remarks/>
        public HighwayAlerts() {
            this.Url = "http://www.wsdot.wa.gov/traffic/api/HighwayAlerts/HighwayAlerts.svc";
        }
        
        /// <remarks/>
        public event GetAlertsCompletedEventHandler GetAlertsCompleted;
        
        /// <remarks/>
        public event GetAlertsAsDataSetCompletedEventHandler GetAlertsAsDataSetCompleted;
        
        /// <remarks/>
        public event SearchAlertsCompletedEventHandler SearchAlertsCompleted;
        
        /// <remarks/>
        public event GetAlertCompletedEventHandler GetAlertCompleted;
        
        /// <remarks/>
        public event GetEventCategoriesCompletedEventHandler GetEventCategoriesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayAlerts/GetAlerts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Alert[] GetAlerts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetAlerts", new object[] {
                        AccessCode});
            return ((Alert[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlerts(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlerts", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public Alert[] EndGetAlerts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Alert[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAlertsAsync(string AccessCode) {
            this.GetAlertsAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetAlertsAsync(string AccessCode, object userState) {
            if ((this.GetAlertsOperationCompleted == null)) {
                this.GetAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlertsOperationCompleted);
            }
            this.InvokeAsync("GetAlerts", new object[] {
                        AccessCode}, this.GetAlertsOperationCompleted, userState);
        }
        
        private void OnGetAlertsOperationCompleted(object arg) {
            if ((this.GetAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlertsCompleted(this, new GetAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayAlerts/GetAlertsAsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetAlertsAsDataSet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetAlertsAsDataSet", new object[] {
                        AccessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlertsAsDataSet(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlertsAsDataSet", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAlertsAsDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlertsAsDataSetAsync(string AccessCode) {
            this.GetAlertsAsDataSetAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetAlertsAsDataSetAsync(string AccessCode, object userState) {
            if ((this.GetAlertsAsDataSetOperationCompleted == null)) {
                this.GetAlertsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlertsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetAlertsAsDataSet", new object[] {
                        AccessCode}, this.GetAlertsAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetAlertsAsDataSetOperationCompleted(object arg) {
            if ((this.GetAlertsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlertsAsDataSetCompleted(this, new GetAlertsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayAlerts/SearchAlerts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Alert[] SearchAlerts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StateRoute, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Region, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> SearchTimeStart, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool SearchTimeStartSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> SearchTimeEnd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool SearchTimeEndSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> StartingMilepost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartingMilepostSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> EndingMilepost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndingMilepostSpecified) {
            object[] results = this.Invoke("SearchAlerts", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        SearchTimeStart,
                        SearchTimeStartSpecified,
                        SearchTimeEnd,
                        SearchTimeEndSpecified,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified});
            return ((Alert[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchAlerts(string AccessCode, string StateRoute, string Region, System.Nullable<System.DateTime> SearchTimeStart, bool SearchTimeStartSpecified, System.Nullable<System.DateTime> SearchTimeEnd, bool SearchTimeEndSpecified, System.Nullable<decimal> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<decimal> EndingMilepost, bool EndingMilepostSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchAlerts", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        SearchTimeStart,
                        SearchTimeStartSpecified,
                        SearchTimeEnd,
                        SearchTimeEndSpecified,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public Alert[] EndSearchAlerts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Alert[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAlertsAsync(string AccessCode, string StateRoute, string Region, System.Nullable<System.DateTime> SearchTimeStart, bool SearchTimeStartSpecified, System.Nullable<System.DateTime> SearchTimeEnd, bool SearchTimeEndSpecified, System.Nullable<decimal> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<decimal> EndingMilepost, bool EndingMilepostSpecified) {
            this.SearchAlertsAsync(AccessCode, StateRoute, Region, SearchTimeStart, SearchTimeStartSpecified, SearchTimeEnd, SearchTimeEndSpecified, StartingMilepost, StartingMilepostSpecified, EndingMilepost, EndingMilepostSpecified, null);
        }
        
        /// <remarks/>
        public void SearchAlertsAsync(string AccessCode, string StateRoute, string Region, System.Nullable<System.DateTime> SearchTimeStart, bool SearchTimeStartSpecified, System.Nullable<System.DateTime> SearchTimeEnd, bool SearchTimeEndSpecified, System.Nullable<decimal> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<decimal> EndingMilepost, bool EndingMilepostSpecified, object userState) {
            if ((this.SearchAlertsOperationCompleted == null)) {
                this.SearchAlertsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAlertsOperationCompleted);
            }
            this.InvokeAsync("SearchAlerts", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        SearchTimeStart,
                        SearchTimeStartSpecified,
                        SearchTimeEnd,
                        SearchTimeEndSpecified,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified}, this.SearchAlertsOperationCompleted, userState);
        }
        
        private void OnSearchAlertsOperationCompleted(object arg) {
            if ((this.SearchAlertsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAlertsCompleted(this, new SearchAlertsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayAlerts/GetAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Alert GetAlert([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, int AlertID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool AlertIDSpecified) {
            object[] results = this.Invoke("GetAlert", new object[] {
                        AccessCode,
                        AlertID,
                        AlertIDSpecified});
            return ((Alert)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAlert(string AccessCode, int AlertID, bool AlertIDSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAlert", new object[] {
                        AccessCode,
                        AlertID,
                        AlertIDSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public Alert EndGetAlert(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Alert)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlertAsync(string AccessCode, int AlertID, bool AlertIDSpecified) {
            this.GetAlertAsync(AccessCode, AlertID, AlertIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetAlertAsync(string AccessCode, int AlertID, bool AlertIDSpecified, object userState) {
            if ((this.GetAlertOperationCompleted == null)) {
                this.GetAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlertOperationCompleted);
            }
            this.InvokeAsync("GetAlert", new object[] {
                        AccessCode,
                        AlertID,
                        AlertIDSpecified}, this.GetAlertOperationCompleted, userState);
        }
        
        private void OnGetAlertOperationCompleted(object arg) {
            if ((this.GetAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlertCompleted(this, new GetAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayAlerts/GetEventCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetEventCategories() {
            object[] results = this.Invoke("GetEventCategories", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEventCategories(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEventCategories", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetEventCategories(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEventCategoriesAsync() {
            this.GetEventCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetEventCategoriesAsync(object userState) {
            if ((this.GetEventCategoriesOperationCompleted == null)) {
                this.GetEventCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetEventCategories", new object[0], this.GetEventCategoriesOperationCompleted, userState);
        }
        
        private void OnGetEventCategoriesOperationCompleted(object arg) {
            if ((this.GetEventCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventCategoriesCompleted(this, new GetEventCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Alert {
        
        private int alertIDField;
        
        private bool alertIDFieldSpecified;
        
        private string countyField;
        
        private RoadwayLocation endRoadwayLocationField;
        
        private System.Nullable<System.DateTime> endTimeField;
        
        private bool endTimeFieldSpecified;
        
        private string eventCategoryField;
        
        private string eventStatusField;
        
        private string extendedDescriptionField;
        
        private string headlineDescriptionField;
        
        private System.Nullable<System.DateTime> lastUpdatedTimeField;
        
        private bool lastUpdatedTimeFieldSpecified;
        
        private string priorityField;
        
        private string regionField;
        
        private RoadwayLocation startRoadwayLocationField;
        
        private System.Nullable<System.DateTime> startTimeField;
        
        private bool startTimeFieldSpecified;
        
        /// <remarks/>
        public int AlertID {
            get {
                return this.alertIDField;
            }
            set {
                this.alertIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlertIDSpecified {
            get {
                return this.alertIDFieldSpecified;
            }
            set {
                this.alertIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation EndRoadwayLocation {
            get {
                return this.endRoadwayLocationField;
            }
            set {
                this.endRoadwayLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndTimeSpecified {
            get {
                return this.endTimeFieldSpecified;
            }
            set {
                this.endTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EventCategory {
            get {
                return this.eventCategoryField;
            }
            set {
                this.eventCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EventStatus {
            get {
                return this.eventStatusField;
            }
            set {
                this.eventStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedDescription {
            get {
                return this.extendedDescriptionField;
            }
            set {
                this.extendedDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HeadlineDescription {
            get {
                return this.headlineDescriptionField;
            }
            set {
                this.headlineDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastUpdatedTime {
            get {
                return this.lastUpdatedTimeField;
            }
            set {
                this.lastUpdatedTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastUpdatedTimeSpecified {
            get {
                return this.lastUpdatedTimeFieldSpecified;
            }
            set {
                this.lastUpdatedTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation StartRoadwayLocation {
            get {
                return this.startRoadwayLocationField;
            }
            set {
                this.startRoadwayLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StartTimeSpecified {
            get {
                return this.startTimeFieldSpecified;
            }
            set {
                this.startTimeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAlertsCompletedEventHandler(object sender, GetAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Alert[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Alert[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAlertsAsDataSetCompletedEventHandler(object sender, GetAlertsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlertsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlertsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SearchAlertsCompletedEventHandler(object sender, SearchAlertsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Alert[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Alert[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAlertCompletedEventHandler(object sender, GetAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Alert Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Alert)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetEventCategoriesCompletedEventHandler(object sender, GetEventCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IHighwayCameras", Namespace="http://tempuri.org/")]
    public partial class HighwayCameras : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCamerasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCamerasAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCamerasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCameraOperationCompleted;
        
        /// <remarks/>
        public HighwayCameras() {
            this.Url = "http://www.wsdot.wa.gov/traffic/api/HighwayCameras/HighwayCameras.svc";
        }
        
        /// <remarks/>
        public event GetCamerasCompletedEventHandler GetCamerasCompleted;
        
        /// <remarks/>
        public event GetCamerasAsDataSetCompletedEventHandler GetCamerasAsDataSetCompleted;
        
        /// <remarks/>
        public event SearchCamerasCompletedEventHandler SearchCamerasCompleted;
        
        /// <remarks/>
        public event GetCameraCompletedEventHandler GetCameraCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayCameras/GetCameras", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Camera[] GetCameras([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetCameras", new object[] {
                        AccessCode});
            return ((Camera[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCameras(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCameras", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public Camera[] EndGetCameras(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Camera[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCamerasAsync(string AccessCode) {
            this.GetCamerasAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetCamerasAsync(string AccessCode, object userState) {
            if ((this.GetCamerasOperationCompleted == null)) {
                this.GetCamerasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCamerasOperationCompleted);
            }
            this.InvokeAsync("GetCameras", new object[] {
                        AccessCode}, this.GetCamerasOperationCompleted, userState);
        }
        
        private void OnGetCamerasOperationCompleted(object arg) {
            if ((this.GetCamerasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCamerasCompleted(this, new GetCamerasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayCameras/GetCamerasAsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetCamerasAsDataSet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetCamerasAsDataSet", new object[] {
                        AccessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCamerasAsDataSet(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCamerasAsDataSet", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetCamerasAsDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCamerasAsDataSetAsync(string AccessCode) {
            this.GetCamerasAsDataSetAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetCamerasAsDataSetAsync(string AccessCode, object userState) {
            if ((this.GetCamerasAsDataSetOperationCompleted == null)) {
                this.GetCamerasAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCamerasAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetCamerasAsDataSet", new object[] {
                        AccessCode}, this.GetCamerasAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetCamerasAsDataSetOperationCompleted(object arg) {
            if ((this.GetCamerasAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCamerasAsDataSetCompleted(this, new GetCamerasAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayCameras/SearchCameras", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Camera[] SearchCameras([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StateRoute, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Region, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<double> StartingMilepost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartingMilepostSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<double> EndingMilepost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndingMilepostSpecified) {
            object[] results = this.Invoke("SearchCameras", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified});
            return ((Camera[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchCameras(string AccessCode, string StateRoute, string Region, System.Nullable<double> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<double> EndingMilepost, bool EndingMilepostSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchCameras", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public Camera[] EndSearchCameras(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Camera[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCamerasAsync(string AccessCode, string StateRoute, string Region, System.Nullable<double> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<double> EndingMilepost, bool EndingMilepostSpecified) {
            this.SearchCamerasAsync(AccessCode, StateRoute, Region, StartingMilepost, StartingMilepostSpecified, EndingMilepost, EndingMilepostSpecified, null);
        }
        
        /// <remarks/>
        public void SearchCamerasAsync(string AccessCode, string StateRoute, string Region, System.Nullable<double> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<double> EndingMilepost, bool EndingMilepostSpecified, object userState) {
            if ((this.SearchCamerasOperationCompleted == null)) {
                this.SearchCamerasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCamerasOperationCompleted);
            }
            this.InvokeAsync("SearchCameras", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified}, this.SearchCamerasOperationCompleted, userState);
        }
        
        private void OnSearchCamerasOperationCompleted(object arg) {
            if ((this.SearchCamerasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCamerasCompleted(this, new SearchCamerasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IHighwayCameras/GetCamera", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Camera GetCamera([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, int CameraID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool CameraIDSpecified) {
            object[] results = this.Invoke("GetCamera", new object[] {
                        AccessCode,
                        CameraID,
                        CameraIDSpecified});
            return ((Camera)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCamera(string AccessCode, int CameraID, bool CameraIDSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCamera", new object[] {
                        AccessCode,
                        CameraID,
                        CameraIDSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public Camera EndGetCamera(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Camera)(results[0]));
        }
        
        /// <remarks/>
        public void GetCameraAsync(string AccessCode, int CameraID, bool CameraIDSpecified) {
            this.GetCameraAsync(AccessCode, CameraID, CameraIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetCameraAsync(string AccessCode, int CameraID, bool CameraIDSpecified, object userState) {
            if ((this.GetCameraOperationCompleted == null)) {
                this.GetCameraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCameraOperationCompleted);
            }
            this.InvokeAsync("GetCamera", new object[] {
                        AccessCode,
                        CameraID,
                        CameraIDSpecified}, this.GetCameraOperationCompleted, userState);
        }
        
        private void OnGetCameraOperationCompleted(object arg) {
            if ((this.GetCameraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCameraCompleted(this, new GetCameraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class Camera {
        
        private int cameraIDField;
        
        private bool cameraIDFieldSpecified;
        
        private RoadwayLocation cameraLocationField;
        
        private string cameraOwnerField;
        
        private string descriptionField;
        
        private double displayLatitudeField;
        
        private bool displayLatitudeFieldSpecified;
        
        private double displayLongitudeField;
        
        private bool displayLongitudeFieldSpecified;
        
        private int imageHeightField;
        
        private bool imageHeightFieldSpecified;
        
        private string imageURLField;
        
        private int imageWidthField;
        
        private bool imageWidthFieldSpecified;
        
        private bool isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private string ownerURLField;
        
        private string regionField;
        
        private int sortOrderField;
        
        private bool sortOrderFieldSpecified;
        
        private string titleField;
        
        /// <remarks/>
        public int CameraID {
            get {
                return this.cameraIDField;
            }
            set {
                this.cameraIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CameraIDSpecified {
            get {
                return this.cameraIDFieldSpecified;
            }
            set {
                this.cameraIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation CameraLocation {
            get {
                return this.cameraLocationField;
            }
            set {
                this.cameraLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CameraOwner {
            get {
                return this.cameraOwnerField;
            }
            set {
                this.cameraOwnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double DisplayLatitude {
            get {
                return this.displayLatitudeField;
            }
            set {
                this.displayLatitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayLatitudeSpecified {
            get {
                return this.displayLatitudeFieldSpecified;
            }
            set {
                this.displayLatitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double DisplayLongitude {
            get {
                return this.displayLongitudeField;
            }
            set {
                this.displayLongitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DisplayLongitudeSpecified {
            get {
                return this.displayLongitudeFieldSpecified;
            }
            set {
                this.displayLongitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ImageHeight {
            get {
                return this.imageHeightField;
            }
            set {
                this.imageHeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageHeightSpecified {
            get {
                return this.imageHeightFieldSpecified;
            }
            set {
                this.imageHeightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImageURL {
            get {
                return this.imageURLField;
            }
            set {
                this.imageURLField = value;
            }
        }
        
        /// <remarks/>
        public int ImageWidth {
            get {
                return this.imageWidthField;
            }
            set {
                this.imageWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageWidthSpecified {
            get {
                return this.imageWidthFieldSpecified;
            }
            set {
                this.imageWidthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OwnerURL {
            get {
                return this.ownerURLField;
            }
            set {
                this.ownerURLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        public int SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortOrderSpecified {
            get {
                return this.sortOrderFieldSpecified;
            }
            set {
                this.sortOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCamerasCompletedEventHandler(object sender, GetCamerasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCamerasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCamerasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Camera[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Camera[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCamerasAsDataSetCompletedEventHandler(object sender, GetCamerasAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCamerasAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCamerasAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SearchCamerasCompletedEventHandler(object sender, SearchCamerasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCamerasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCamerasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Camera[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Camera[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCameraCompletedEventHandler(object sender, GetCameraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCameraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCameraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Camera Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Camera)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IMountainPassConditions", Namespace="http://tempuri.org/")]
    public partial class MountainPassConditions : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMountainPassConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMountainPassConditionsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMountainPassConditionOperationCompleted;
        
        /// <remarks/>
        public MountainPassConditions() {
            this.Url = "http://www.wsdot.wa.gov/traffic/api/MountainPassConditions/MountainPassConditions" +
                ".svc";
        }
        
        /// <remarks/>
        public event GetMountainPassConditionsCompletedEventHandler GetMountainPassConditionsCompleted;
        
        /// <remarks/>
        public event GetMountainPassConditionsAsDataSetCompletedEventHandler GetMountainPassConditionsAsDataSetCompleted;
        
        /// <remarks/>
        public event GetMountainPassConditionCompletedEventHandler GetMountainPassConditionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IMountainPassConditions/GetMountainPassConditions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public PassCondition[] GetMountainPassConditions([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetMountainPassConditions", new object[] {
                        AccessCode});
            return ((PassCondition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMountainPassConditions(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMountainPassConditions", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public PassCondition[] EndGetMountainPassConditions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PassCondition[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainPassConditionsAsync(string AccessCode) {
            this.GetMountainPassConditionsAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetMountainPassConditionsAsync(string AccessCode, object userState) {
            if ((this.GetMountainPassConditionsOperationCompleted == null)) {
                this.GetMountainPassConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainPassConditionsOperationCompleted);
            }
            this.InvokeAsync("GetMountainPassConditions", new object[] {
                        AccessCode}, this.GetMountainPassConditionsOperationCompleted, userState);
        }
        
        private void OnGetMountainPassConditionsOperationCompleted(object arg) {
            if ((this.GetMountainPassConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainPassConditionsCompleted(this, new GetMountainPassConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsAsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetMountainPassConditionsAsDataSet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetMountainPassConditionsAsDataSet", new object[] {
                        AccessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMountainPassConditionsAsDataSet(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMountainPassConditionsAsDataSet", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetMountainPassConditionsAsDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainPassConditionsAsDataSetAsync(string AccessCode) {
            this.GetMountainPassConditionsAsDataSetAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetMountainPassConditionsAsDataSetAsync(string AccessCode, object userState) {
            if ((this.GetMountainPassConditionsAsDataSetOperationCompleted == null)) {
                this.GetMountainPassConditionsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainPassConditionsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetMountainPassConditionsAsDataSet", new object[] {
                        AccessCode}, this.GetMountainPassConditionsAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetMountainPassConditionsAsDataSetOperationCompleted(object arg) {
            if ((this.GetMountainPassConditionsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainPassConditionsAsDataSetCompleted(this, new GetMountainPassConditionsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IMountainPassConditions/GetMountainPassCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PassCondition GetMountainPassCondition([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, int PassConditionID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PassConditionIDSpecified) {
            object[] results = this.Invoke("GetMountainPassCondition", new object[] {
                        AccessCode,
                        PassConditionID,
                        PassConditionIDSpecified});
            return ((PassCondition)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMountainPassCondition(string AccessCode, int PassConditionID, bool PassConditionIDSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMountainPassCondition", new object[] {
                        AccessCode,
                        PassConditionID,
                        PassConditionIDSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public PassCondition EndGetMountainPassCondition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PassCondition)(results[0]));
        }
        
        /// <remarks/>
        public void GetMountainPassConditionAsync(string AccessCode, int PassConditionID, bool PassConditionIDSpecified) {
            this.GetMountainPassConditionAsync(AccessCode, PassConditionID, PassConditionIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetMountainPassConditionAsync(string AccessCode, int PassConditionID, bool PassConditionIDSpecified, object userState) {
            if ((this.GetMountainPassConditionOperationCompleted == null)) {
                this.GetMountainPassConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMountainPassConditionOperationCompleted);
            }
            this.InvokeAsync("GetMountainPassCondition", new object[] {
                        AccessCode,
                        PassConditionID,
                        PassConditionIDSpecified}, this.GetMountainPassConditionOperationCompleted, userState);
        }
        
        private void OnGetMountainPassConditionOperationCompleted(object arg) {
            if ((this.GetMountainPassConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMountainPassConditionCompleted(this, new GetMountainPassConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PassCondition {
        
        private System.DateTime dateUpdatedField;
        
        private bool dateUpdatedFieldSpecified;
        
        private int elevationInFeetField;
        
        private bool elevationInFeetFieldSpecified;
        
        private double latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private double longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private int mountainPassIdField;
        
        private bool mountainPassIdFieldSpecified;
        
        private string mountainPassNameField;
        
        private TravelRestriction restrictionOneField;
        
        private TravelRestriction restrictionTwoField;
        
        private string roadConditionField;
        
        private System.Nullable<int> temperatureInFahrenheitField;
        
        private bool temperatureInFahrenheitFieldSpecified;
        
        private bool travelAdvisoryActiveField;
        
        private bool travelAdvisoryActiveFieldSpecified;
        
        private string weatherConditionField;
        
        /// <remarks/>
        public System.DateTime DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateUpdatedSpecified {
            get {
                return this.dateUpdatedFieldSpecified;
            }
            set {
                this.dateUpdatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ElevationInFeet {
            get {
                return this.elevationInFeetField;
            }
            set {
                this.elevationInFeetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElevationInFeetSpecified {
            get {
                return this.elevationInFeetFieldSpecified;
            }
            set {
                this.elevationInFeetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LatitudeSpecified {
            get {
                return this.latitudeFieldSpecified;
            }
            set {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LongitudeSpecified {
            get {
                return this.longitudeFieldSpecified;
            }
            set {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MountainPassId {
            get {
                return this.mountainPassIdField;
            }
            set {
                this.mountainPassIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MountainPassIdSpecified {
            get {
                return this.mountainPassIdFieldSpecified;
            }
            set {
                this.mountainPassIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MountainPassName {
            get {
                return this.mountainPassNameField;
            }
            set {
                this.mountainPassNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TravelRestriction RestrictionOne {
            get {
                return this.restrictionOneField;
            }
            set {
                this.restrictionOneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TravelRestriction RestrictionTwo {
            get {
                return this.restrictionTwoField;
            }
            set {
                this.restrictionTwoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RoadCondition {
            get {
                return this.roadConditionField;
            }
            set {
                this.roadConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TemperatureInFahrenheit {
            get {
                return this.temperatureInFahrenheitField;
            }
            set {
                this.temperatureInFahrenheitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemperatureInFahrenheitSpecified {
            get {
                return this.temperatureInFahrenheitFieldSpecified;
            }
            set {
                this.temperatureInFahrenheitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool TravelAdvisoryActive {
            get {
                return this.travelAdvisoryActiveField;
            }
            set {
                this.travelAdvisoryActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TravelAdvisoryActiveSpecified {
            get {
                return this.travelAdvisoryActiveFieldSpecified;
            }
            set {
                this.travelAdvisoryActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WeatherCondition {
            get {
                return this.weatherConditionField;
            }
            set {
                this.weatherConditionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TravelRestriction {
        
        private string restrictionTextField;
        
        private string travelDirectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RestrictionText {
            get {
                return this.restrictionTextField;
            }
            set {
                this.restrictionTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TravelDirection {
            get {
                return this.travelDirectionField;
            }
            set {
                this.travelDirectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetMountainPassConditionsCompletedEventHandler(object sender, GetMountainPassConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainPassConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainPassConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PassCondition[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PassCondition[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetMountainPassConditionsAsDataSetCompletedEventHandler(object sender, GetMountainPassConditionsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainPassConditionsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainPassConditionsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetMountainPassConditionCompletedEventHandler(object sender, GetMountainPassConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMountainPassConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMountainPassConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PassCondition Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PassCondition)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ITrafficFlow", Namespace="http://tempuri.org/")]
    public partial class TrafficFlow : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTrafficFlowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrafficFlowsAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchTrafficFlowsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrafficFlowOperationCompleted;
        
        /// <remarks/>
        public TrafficFlow() {
            this.Url = "http://www.wsdot.wa.gov/traffic/api/TrafficFlow/TrafficFlow.svc";
        }
        
        /// <remarks/>
        public event GetTrafficFlowsCompletedEventHandler GetTrafficFlowsCompleted;
        
        /// <remarks/>
        public event GetTrafficFlowsAsDataSetCompletedEventHandler GetTrafficFlowsAsDataSetCompleted;
        
        /// <remarks/>
        public event SearchTrafficFlowsCompletedEventHandler SearchTrafficFlowsCompleted;
        
        /// <remarks/>
        public event GetTrafficFlowCompletedEventHandler GetTrafficFlowCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITrafficFlow/GetTrafficFlows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public FlowData[] GetTrafficFlows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetTrafficFlows", new object[] {
                        AccessCode});
            return ((FlowData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTrafficFlows(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTrafficFlows", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public FlowData[] EndGetTrafficFlows(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FlowData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTrafficFlowsAsync(string AccessCode) {
            this.GetTrafficFlowsAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetTrafficFlowsAsync(string AccessCode, object userState) {
            if ((this.GetTrafficFlowsOperationCompleted == null)) {
                this.GetTrafficFlowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrafficFlowsOperationCompleted);
            }
            this.InvokeAsync("GetTrafficFlows", new object[] {
                        AccessCode}, this.GetTrafficFlowsOperationCompleted, userState);
        }
        
        private void OnGetTrafficFlowsOperationCompleted(object arg) {
            if ((this.GetTrafficFlowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrafficFlowsCompleted(this, new GetTrafficFlowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITrafficFlow/GetTrafficFlowsAsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetTrafficFlowsAsDataSet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetTrafficFlowsAsDataSet", new object[] {
                        AccessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTrafficFlowsAsDataSet(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTrafficFlowsAsDataSet", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTrafficFlowsAsDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrafficFlowsAsDataSetAsync(string AccessCode) {
            this.GetTrafficFlowsAsDataSetAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetTrafficFlowsAsDataSetAsync(string AccessCode, object userState) {
            if ((this.GetTrafficFlowsAsDataSetOperationCompleted == null)) {
                this.GetTrafficFlowsAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrafficFlowsAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetTrafficFlowsAsDataSet", new object[] {
                        AccessCode}, this.GetTrafficFlowsAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetTrafficFlowsAsDataSetOperationCompleted(object arg) {
            if ((this.GetTrafficFlowsAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrafficFlowsAsDataSetCompleted(this, new GetTrafficFlowsAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITrafficFlow/SearchTrafficFlows", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public FlowData[] SearchTrafficFlows([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StateRoute, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Region, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> SearchStartTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool SearchStartTimeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> SearchEndTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool SearchEndTimeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<double> StartingMilepost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool StartingMilepostSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<double> EndingMilepost, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool EndingMilepostSpecified) {
            object[] results = this.Invoke("SearchTrafficFlows", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        SearchStartTime,
                        SearchStartTimeSpecified,
                        SearchEndTime,
                        SearchEndTimeSpecified,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified});
            return ((FlowData[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchTrafficFlows(string AccessCode, string StateRoute, string Region, System.Nullable<System.DateTime> SearchStartTime, bool SearchStartTimeSpecified, System.Nullable<System.DateTime> SearchEndTime, bool SearchEndTimeSpecified, System.Nullable<double> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<double> EndingMilepost, bool EndingMilepostSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchTrafficFlows", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        SearchStartTime,
                        SearchStartTimeSpecified,
                        SearchEndTime,
                        SearchEndTimeSpecified,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public FlowData[] EndSearchTrafficFlows(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FlowData[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchTrafficFlowsAsync(string AccessCode, string StateRoute, string Region, System.Nullable<System.DateTime> SearchStartTime, bool SearchStartTimeSpecified, System.Nullable<System.DateTime> SearchEndTime, bool SearchEndTimeSpecified, System.Nullable<double> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<double> EndingMilepost, bool EndingMilepostSpecified) {
            this.SearchTrafficFlowsAsync(AccessCode, StateRoute, Region, SearchStartTime, SearchStartTimeSpecified, SearchEndTime, SearchEndTimeSpecified, StartingMilepost, StartingMilepostSpecified, EndingMilepost, EndingMilepostSpecified, null);
        }
        
        /// <remarks/>
        public void SearchTrafficFlowsAsync(string AccessCode, string StateRoute, string Region, System.Nullable<System.DateTime> SearchStartTime, bool SearchStartTimeSpecified, System.Nullable<System.DateTime> SearchEndTime, bool SearchEndTimeSpecified, System.Nullable<double> StartingMilepost, bool StartingMilepostSpecified, System.Nullable<double> EndingMilepost, bool EndingMilepostSpecified, object userState) {
            if ((this.SearchTrafficFlowsOperationCompleted == null)) {
                this.SearchTrafficFlowsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTrafficFlowsOperationCompleted);
            }
            this.InvokeAsync("SearchTrafficFlows", new object[] {
                        AccessCode,
                        StateRoute,
                        Region,
                        SearchStartTime,
                        SearchStartTimeSpecified,
                        SearchEndTime,
                        SearchEndTimeSpecified,
                        StartingMilepost,
                        StartingMilepostSpecified,
                        EndingMilepost,
                        EndingMilepostSpecified}, this.SearchTrafficFlowsOperationCompleted, userState);
        }
        
        private void OnSearchTrafficFlowsOperationCompleted(object arg) {
            if ((this.SearchTrafficFlowsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTrafficFlowsCompleted(this, new SearchTrafficFlowsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITrafficFlow/GetTrafficFlow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public FlowData GetTrafficFlow([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, int FlowDataID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool FlowDataIDSpecified) {
            object[] results = this.Invoke("GetTrafficFlow", new object[] {
                        AccessCode,
                        FlowDataID,
                        FlowDataIDSpecified});
            return ((FlowData)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTrafficFlow(string AccessCode, int FlowDataID, bool FlowDataIDSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTrafficFlow", new object[] {
                        AccessCode,
                        FlowDataID,
                        FlowDataIDSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public FlowData EndGetTrafficFlow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FlowData)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrafficFlowAsync(string AccessCode, int FlowDataID, bool FlowDataIDSpecified) {
            this.GetTrafficFlowAsync(AccessCode, FlowDataID, FlowDataIDSpecified, null);
        }
        
        /// <remarks/>
        public void GetTrafficFlowAsync(string AccessCode, int FlowDataID, bool FlowDataIDSpecified, object userState) {
            if ((this.GetTrafficFlowOperationCompleted == null)) {
                this.GetTrafficFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrafficFlowOperationCompleted);
            }
            this.InvokeAsync("GetTrafficFlow", new object[] {
                        AccessCode,
                        FlowDataID,
                        FlowDataIDSpecified}, this.GetTrafficFlowOperationCompleted, userState);
        }
        
        private void OnGetTrafficFlowOperationCompleted(object arg) {
            if ((this.GetTrafficFlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrafficFlowCompleted(this, new GetTrafficFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class FlowData {
        
        private int flowDataIDField;
        
        private bool flowDataIDFieldSpecified;
        
        private FlowStationReading flowReadingValueField;
        
        private bool flowReadingValueFieldSpecified;
        
        private RoadwayLocation flowStationLocationField;
        
        private string regionField;
        
        private string stationNameField;
        
        private System.DateTime timeField;
        
        private bool timeFieldSpecified;
        
        /// <remarks/>
        public int FlowDataID {
            get {
                return this.flowDataIDField;
            }
            set {
                this.flowDataIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlowDataIDSpecified {
            get {
                return this.flowDataIDFieldSpecified;
            }
            set {
                this.flowDataIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public FlowStationReading FlowReadingValue {
            get {
                return this.flowReadingValueField;
            }
            set {
                this.flowReadingValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlowReadingValueSpecified {
            get {
                return this.flowReadingValueFieldSpecified;
            }
            set {
                this.flowReadingValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation FlowStationLocation {
            get {
                return this.flowStationLocationField;
            }
            set {
                this.flowStationLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeSpecified {
            get {
                return this.timeFieldSpecified;
            }
            set {
                this.timeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum FlowStationReading {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        WideOpen,
        
        /// <remarks/>
        Moderate,
        
        /// <remarks/>
        Heavy,
        
        /// <remarks/>
        StopAndGo,
        
        /// <remarks/>
        NoData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTrafficFlowsCompletedEventHandler(object sender, GetTrafficFlowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrafficFlowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrafficFlowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlowData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlowData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTrafficFlowsAsDataSetCompletedEventHandler(object sender, GetTrafficFlowsAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrafficFlowsAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrafficFlowsAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SearchTrafficFlowsCompletedEventHandler(object sender, SearchTrafficFlowsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTrafficFlowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTrafficFlowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlowData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlowData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTrafficFlowCompletedEventHandler(object sender, GetTrafficFlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrafficFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrafficFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FlowData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FlowData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ITravelTimes", Namespace="http://tempuri.org/")]
    public partial class TravelTimes : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTravelTimesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTravelTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTravelTimesAsDataSetOperationCompleted;
        
        /// <remarks/>
        public TravelTimes() {
            this.Url = "http://www.wsdot.wa.gov/traffic/api/TravelTimes/TravelTimes.svc";
        }
        
        /// <remarks/>
        public event GetTravelTimesCompletedEventHandler GetTravelTimesCompleted;
        
        /// <remarks/>
        public event GetTravelTimeCompletedEventHandler GetTravelTimeCompleted;
        
        /// <remarks/>
        public event GetTravelTimesAsDataSetCompletedEventHandler GetTravelTimesAsDataSetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITravelTimes/GetTravelTimes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public TravelTimeRoute[] GetTravelTimes([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetTravelTimes", new object[] {
                        AccessCode});
            return ((TravelTimeRoute[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTravelTimes(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTravelTimes", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public TravelTimeRoute[] EndGetTravelTimes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TravelTimeRoute[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTravelTimesAsync(string AccessCode) {
            this.GetTravelTimesAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetTravelTimesAsync(string AccessCode, object userState) {
            if ((this.GetTravelTimesOperationCompleted == null)) {
                this.GetTravelTimesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravelTimesOperationCompleted);
            }
            this.InvokeAsync("GetTravelTimes", new object[] {
                        AccessCode}, this.GetTravelTimesOperationCompleted, userState);
        }
        
        private void OnGetTravelTimesOperationCompleted(object arg) {
            if ((this.GetTravelTimesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravelTimesCompleted(this, new GetTravelTimesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITravelTimes/GetTravelTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TravelTimeRoute GetTravelTime([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RouteID) {
            object[] results = this.Invoke("GetTravelTime", new object[] {
                        AccessCode,
                        RouteID});
            return ((TravelTimeRoute)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTravelTime(string AccessCode, string RouteID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTravelTime", new object[] {
                        AccessCode,
                        RouteID}, callback, asyncState);
        }
        
        /// <remarks/>
        public TravelTimeRoute EndGetTravelTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TravelTimeRoute)(results[0]));
        }
        
        /// <remarks/>
        public void GetTravelTimeAsync(string AccessCode, string RouteID) {
            this.GetTravelTimeAsync(AccessCode, RouteID, null);
        }
        
        /// <remarks/>
        public void GetTravelTimeAsync(string AccessCode, string RouteID, object userState) {
            if ((this.GetTravelTimeOperationCompleted == null)) {
                this.GetTravelTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravelTimeOperationCompleted);
            }
            this.InvokeAsync("GetTravelTime", new object[] {
                        AccessCode,
                        RouteID}, this.GetTravelTimeOperationCompleted, userState);
        }
        
        private void OnGetTravelTimeOperationCompleted(object arg) {
            if ((this.GetTravelTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravelTimeCompleted(this, new GetTravelTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITravelTimes/GetTravelTimesAsDataSet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetTravelTimesAsDataSet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string AccessCode) {
            object[] results = this.Invoke("GetTravelTimesAsDataSet", new object[] {
                        AccessCode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTravelTimesAsDataSet(string AccessCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTravelTimesAsDataSet", new object[] {
                        AccessCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetTravelTimesAsDataSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTravelTimesAsDataSetAsync(string AccessCode) {
            this.GetTravelTimesAsDataSetAsync(AccessCode, null);
        }
        
        /// <remarks/>
        public void GetTravelTimesAsDataSetAsync(string AccessCode, object userState) {
            if ((this.GetTravelTimesAsDataSetOperationCompleted == null)) {
                this.GetTravelTimesAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravelTimesAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetTravelTimesAsDataSet", new object[] {
                        AccessCode}, this.GetTravelTimesAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetTravelTimesAsDataSetOperationCompleted(object arg) {
            if ((this.GetTravelTimesAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravelTimesAsDataSetCompleted(this, new GetTravelTimesAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TravelTimeRoute {
        
        private int averageTimeField;
        
        private bool averageTimeFieldSpecified;
        
        private int currentTimeField;
        
        private bool currentTimeFieldSpecified;
        
        private string descriptionField;
        
        private decimal distanceField;
        
        private bool distanceFieldSpecified;
        
        private RoadwayLocation endPointField;
        
        private string nameField;
        
        private string routeIDField;
        
        private RoadwayLocation startPointField;
        
        private System.DateTime timeUpdatedField;
        
        private bool timeUpdatedFieldSpecified;
        
        /// <remarks/>
        public int AverageTime {
            get {
                return this.averageTimeField;
            }
            set {
                this.averageTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageTimeSpecified {
            get {
                return this.averageTimeFieldSpecified;
            }
            set {
                this.averageTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CurrentTime {
            get {
                return this.currentTimeField;
            }
            set {
                this.currentTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentTimeSpecified {
            get {
                return this.currentTimeFieldSpecified;
            }
            set {
                this.currentTimeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceSpecified {
            get {
                return this.distanceFieldSpecified;
            }
            set {
                this.distanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation EndPoint {
            get {
                return this.endPointField;
            }
            set {
                this.endPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RouteID {
            get {
                return this.routeIDField;
            }
            set {
                this.routeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public RoadwayLocation StartPoint {
            get {
                return this.startPointField;
            }
            set {
                this.startPointField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeUpdated {
            get {
                return this.timeUpdatedField;
            }
            set {
                this.timeUpdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeUpdatedSpecified {
            get {
                return this.timeUpdatedFieldSpecified;
            }
            set {
                this.timeUpdatedFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTravelTimesCompletedEventHandler(object sender, GetTravelTimesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravelTimesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravelTimesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TravelTimeRoute[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TravelTimeRoute[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTravelTimeCompletedEventHandler(object sender, GetTravelTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravelTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravelTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TravelTimeRoute Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TravelTimeRoute)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTravelTimesAsDataSetCompletedEventHandler(object sender, GetTravelTimesAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravelTimesAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravelTimesAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}
